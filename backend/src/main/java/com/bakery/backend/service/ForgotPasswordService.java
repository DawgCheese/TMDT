package com.bakery.backend.service;

import com.bakery.backend.model.Account;
import com.bakery.backend.model.ConfirmationToken;
import com.bakery.backend.repository.AccountRepository;
import com.bakery.backend.repository.ConfirmationTokenRepository;
import jakarta.mail.MessagingException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.Optional;
import java.util.UUID;

@Service
public class ForgotPasswordService {

    @Autowired
    private AccountRepository accountRepository;

    @Autowired
    private ConfirmationTokenRepository confirmationTokenRepository;

    @Autowired
    private EmailService emailService;

    public String processForgotPassword(String email) throws MessagingException {
        Optional<Account> optionalAccount = accountRepository.findByEmail(email);
        if (optionalAccount.isEmpty()) {
            return "‚ùå Email kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng!";
        }

        Account account = optionalAccount.get();

        // T·∫°o token ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
        String token = UUID.randomUUID().toString();

        ConfirmationToken confirmationToken = new ConfirmationToken();
        confirmationToken.setToken(token);
        confirmationToken.setCreatedAt(LocalDateTime.now());
        confirmationToken.setExpiresAt(LocalDateTime.now().plusMinutes(30));
        confirmationToken.setAccount(account);
        confirmationTokenRepository.save(confirmationToken);

        // G·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
        sendResetPasswordEmail(email, token);

        return "‚úÖ ƒê√£ g·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë·∫øn " + email;
    }

    public void sendResetPasswordEmail(String toEmail, String resetToken) throws MessagingException {
        String resetLink = "http://localhost:8080/api/auth/reset-password?token=" + resetToken;

        String subject = "üîê Kh√¥i ph·ª•c m·∫≠t kh·∫©u t√†i kho·∫£n Bakery";
        String body = "<p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n.</p>" +
                "<p>Nh·∫•p v√†o li√™n k·∫øt d∆∞·ªõi ƒë√¢y ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>" +
                "<p><a href=\"" + resetLink + "\">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a></p>" +
                "<p>Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 30 ph√∫t.</p>" +
                "<br><p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu kh√¥i ph·ª•c m·∫≠t kh·∫©u, h√£y b·ªè qua email n√†y.</p>" +
                "<hr><p>üíå Bakery Team</p>";

        emailService.sendVerificationEmail(toEmail, subject, body);
    }

}
